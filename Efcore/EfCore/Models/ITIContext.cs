// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace EfCore.Models;

public partial class ITIContext : DbContext
{
    public ITIContext()
    {
    }

    public ITIContext(DbContextOptions<ITIContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Doctor> Doctors { get; set; }

    public virtual DbSet<Hos_address> Hos_addresses { get; set; }

    public virtual DbSet<Hospital> Hospitals { get; set; }

    public virtual DbSet<Patient> Patients { get; set; }

    public virtual DbSet<department> departments { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-5KIMP6P\\SQL2022;Initial Catalog=Hospital;Integrated Security=True;Trust Server Certificate = True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Doctor>(entity =>
        {
            entity.HasKey(e => e.Doctor_id).HasName("PK__Doctor__E5AB9877113C3861");

            entity.ToTable("Doctor");

            entity.Property(e => e.Doctor_id).ValueGeneratedNever();
            entity.Property(e => e.L_name)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.f_name)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.phone_num)
                .HasMaxLength(15)
                .IsUnicode(false);

            entity.HasOne(d => d.Dept).WithMany(p => p.Doctors)
                .HasForeignKey(d => d.Dept_id)
                .HasConstraintName("FK__Doctor__Dept_id__3F466844");
        });

        modelBuilder.Entity<Hos_address>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Hos_address");

            entity.Property(e => e.Hos_address1)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Hos_address");

            entity.HasOne(d => d.Hos).WithMany()
                .HasForeignKey(d => d.Hos_id)
                .HasConstraintName("FK__Hos_addre__Hos_i__398D8EEE");
        });

        modelBuilder.Entity<Hospital>(entity =>
        {
            entity.HasKey(e => e.Hos_id).HasName("PK__Hospital__057D7A44C46E074F");

            entity.ToTable("Hospital");

            entity.HasIndex(e => e.zip_code, "UQ__Hospital__FA8EDA74B24FEEA9").IsUnique();

            entity.Property(e => e.Hos_id).ValueGeneratedNever();
            entity.Property(e => e.Hos_name)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.phone_num)
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Patient>(entity =>
        {
            entity.HasKey(e => e.patient_id).HasName("PK__Patient__4D5CE476B78C9676");

            entity.ToTable("Patient");

            entity.Property(e => e.patient_id).ValueGeneratedNever();
            entity.Property(e => e.f_name)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.l_name)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.patient_address)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.phone_num)
                .HasMaxLength(15)
                .IsUnicode(false);

            entity.HasOne(d => d.doc).WithMany(p => p.Patients)
                .HasForeignKey(d => d.doc_id)
                .HasConstraintName("FK__Patient__doc_id__4222D4EF");
        });

        modelBuilder.Entity<department>(entity =>
        {
            entity.HasKey(e => e.Dept_id).HasName("PK__departme__72A8C6A49ED72632");

            entity.ToTable("department");

            entity.Property(e => e.Dept_id).ValueGeneratedNever();
            entity.Property(e => e.Dept_Name)
                .HasMaxLength(15)
                .IsUnicode(false);

            entity.HasOne(d => d.Hos).WithMany(p => p.departments)
                .HasForeignKey(d => d.Hos_id)
                .HasConstraintName("FK__departmen__Hos_i__3C69FB99");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}